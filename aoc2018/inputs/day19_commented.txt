#ip 1
addi 1 16 1 #  0, reg[1] += 16 (goto 17)
seti 1 5 5  #  1, reg[5] = 1
seti 1 2 3  #  2, reg[3] = 1
mulr 5 3 2  #  3, reg[2] = reg[5] * reg[3]
eqrr 2 4 2  #  4, reg[2] = int(reg[2] == reg[4])
addr 2 1 1  #  5, reg[1] += reg[2] (if reg[2]: goto 7)
addi 1 1 1  #  6, reg[1] += 1
addr 5 0 0  #  7, reg[0] += reg[5]
addi 3 1 3  #  8, reg[3] += 1
gtrr 3 4 2  #  9, reg[2] = int(reg[3] > reg[4])
addr 1 2 1  # 10, reg[1] += reg[2] (if reg[2]: goto 12)
seti 2 6 1  # 11, reg[1] = 2 (goto 3)
addi 5 1 5  # 12, reg[5] += 1
gtrr 5 4 2  # 13, reg[2] = int(reg[5] > reg[4])
addr 2 1 1  # 14, reg[1] += reg[2] (if reg[2]: goto 16)
seti 1 8 1  # 15, reg[1] = 1 (goto 2)
mulr 1 1 1  # 16, reg[1] *= reg[1] (halt program, ip will be 256)

addi 4 2 4  # 17, reg[4] += 2
mulr 4 4 4  # 18, reg[4] *= reg[4]
mulr 1 4 4  # 19, reg[4] *= reg[1] (reg[4] *= 19)
muli 4 11 4 # 20, reg[4] *= 11
addi 2 5 2  # 21, reg[2] += 5
mulr 2 1 2  # 22, reg[2] *= reg[1] (reg[2] *= 22)
addi 2 12 2 # 23, reg[2] += 12
addr 4 2 4  # 24, reg[4] += reg[2]
addr 1 0 1  # 25, reg[1] += reg[0]
seti 0 4 1  # 26, reg[1] = 0 (goto 1)

setr 1 4 2  # 27, reg[2] = reg[1] (reg[2] = 27)
mulr 2 1 2  # 28, reg[2] *= reg[1] (reg[2] *= 28)
addr 1 2 2  # 29, reg[2] += reg[1] (reg[2] += 29)
mulr 1 2 2  # 30, reg[2] *= reg[1] (reg[2] *= 30)
muli 2 14 2 # 31, reg[2] *= 14
mulr 2 1 2  # 32, reg[2] *= reg[1] (reg[2] *= 32)
addr 4 2 4  # 33, reg[4] += reg[2]
seti 0 3 0  # 34, reg[0] = 0
seti 0 7 1  # 35, reg[1] = 0 (goto 1)
